<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init DLL **Not even required, empty function in extension**
dllinit(0,true,false);
//Server IP and port
global.serverip = "127.0.0.1"; 
global.serverport = 8080;

//Connect
global.tcp = tcpconnect(global.serverip,global.serverport,1);
if(show_question("Do you have an account?"))
{
ini_open("UserData.ini");
login=ini_read_string("User","Name","Anon");
pass=ini_read_string("User","Password","Anon");
xx=ini_read_real("Position","x",112);
yy=ini_read_real("Position","y",112);
ini_close();
clearbuffer();
writebyte(5);
writestring(login);
writestring(pass);
writeshort(xx);
writeshort(yy);
sendmessage(global.tcp);
}
else
{
login=get_string("Register a new Username","Anon");
pass=get_string("Enter Your Password","Anon");
ini_open("UserData.ini");
ini_write_string("User","Name",login);
ini_write_string("User","Password",pass);
ini_close();
clearbuffer();
writebyte(6);
writestring(login);
writestring(pass);
sendmessage(global.tcp);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("UserData.ini");
ini_write_real("Position","x",player_me.x);
ini_write_real("Position","y",player_me.y);
ini_close();
alarm[0]=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while(receivemessage(global.tcp)){
messageid=readbyte();
switch(messageid)
{
case 1: //Get ID
global.myid=readbyte();
break;

case 2: //Update Position
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=ld;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
lastdir=Messaging.ld;
}
}
break;

case 3: //Someone is joining
pid=readshort();
px=readshort();
py=readshort();
pname=readstring();
if(pid==global.mid)
{
player_me.targetx=px;
player_me.targety=py;
}
else
if (pid!=global.myid){
p=instance_create(px,py,player_other);
p.pid=pid;
p.name=pname;
}
//Send my position, so they can add me
clearbuffer();
writebyte(4);
writeshort(global.myid);
writeshort(player_me.x);
writeshort(player_me.y);
writeshort(player_me.lastdir);
writestring(global.username);
sendmessage(global.tcp);
break;

case 4: //Someone is joining
pid=readshort();
px=readshort();
py=readshort();
plastdir=readshort();
pname=readstring();
if(pid==global.mid)
{
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=plastdir;
}
else
if (pid!=global.myid){
p=instance_create(px,py,player_other);
p.pid=pid;
p.lastdir=plastdir;
p.name=pname;
}
break;

case 5: //Login Successful
global.username=readstring();
xx=readshort();
yy=readshort();
show_message("You are now logged in.");
p=instance_create(xx,yy,player_me);
p.alarm[0]=1;
break;

case 6: //Bad Login
show_message("Login was invalid");
game_restart();
break;

case 7: //Username Taken
show_message("Username Taken");
game_restart();
break;

case 8: //Registered
login=readstring();
pass=readstring();
ini_open("UserData.ini");
ini_write_string("User","Name",login);
ini_write_string("User","Password",pass);
ini_close();
show_message("Registered. Game restarting so you can login.");
game_restart();
break;

case 9: //Disconnect
pid=readshort();
with (player_other){
if (pid==Messaging.pid){
instance_destroy();
}
}
break;

case 10: //Chat
add_line(readstring(),readstring(),c_black);
break;

//Receive Keyboard Input//
case 11: //Left
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=ld;
player_me.LeftPressed=true;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
LeftPressed=true;
lastdir=Messaging.ld;
}
}
break;

case 12: //Right
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=ld;
player_me.RightPressed=true;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
RightPressed=true;
lastdir=Messaging.ld;
}
}
break;

case 13: //Up
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=ld;
player_me.UpPressed=true;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
UpPressed=true;
lastdir=Messaging.ld;
}
}
break;

case 14: //Down
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.lastdir=ld;
player_me.DownPressed=true;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
DownPressed=true;
lastdir=Messaging.ld;
}
}
break;

case 15: //LeftReleased
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.LeftPressed=false;
player_me.lastdir=ld;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
LeftPressed=false;
lastdir=Messaging.ld;
}
}
break;

case 16: //RightReleased
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.RightPressed=false;
player_me.lastdir=ld;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
RightPressed=false;
lastdir=Messaging.ld;
}
}
break;

case 17: //UpReleased
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.UpPressed=false;
player_me.lastdir=ld;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
UpPressed=false;
lastdir=Messaging.ld;
}
}
break;

case 18: //DownReleased
pid=readshort();
px=readshort();
py=readshort();
ld=readshort();
if (pid==global.myid){
player_me.targetx=px;
player_me.targety=py;
player_me.DownPressed=false;
player_me.lastdir=ld;
}
else
with (player_other){
if (pid==Messaging.pid){
targetx=Messaging.px; 
targety=Messaging.py;
DownPressed=false;
lastdir=Messaging.ld;
}
}
break;

case 20:
player_me.ping=readshort()+1;
player_me.reset=true;
break;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clearbuffer();
writebyte(7);
writeshort(global.myid);
writestring(global.username);
writeshort(player_me.x);
writeshort(player_me.y);
sendmessage(global.tcp);
ini_open("UserData.ini");
ini_write_real("Position","x",player_me.x);
ini_write_real("Position","y",player_me.y);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clearbuffer();
writebyte(7);
writeshort(global.myid);
writestring(global.username);
writeshort(player_me.x);
writeshort(player_me.y);
sendmessage(global.tcp);
ini_open("UserData.ini");
ini_write_real("Position","x",player_me.x);
ini_write_real("Position","y",player_me.y);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
